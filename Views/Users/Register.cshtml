@model Common.Client

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/MasterPage.cshtml";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Register</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "text" })
           
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })    
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "text" })
            
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "text" })

                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "text" })
        
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
          
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HouseName, htmlAttributes: new { @class = "text" })
         
                @Html.EditorFor(model => model.HouseName, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.HouseName, "", new { @class = "text-danger" })
        
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "text" })
            
                @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
        
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Town, "Town", htmlAttributes: new { @class = "text" })
            
           @Html.DropDownListFor(model => model.Town, new SelectList(new BusinessLogic.UsersBL().GetTowns(), "TownID", "TownName"))
                
           @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "text" })
      
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelNumber, htmlAttributes: new { @class = "text" })
           
                @Html.EditorFor(model => model.TelNumber, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.TelNumber, "", new { @class = "text-danger" })
      
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "text" })
            
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
       
        </div>

        <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
        </div>
        <p>
            @if (ViewData["msg"] != null)
                {
                @ViewData["msg"].ToString();
                }
        </p>
    </div>
}

